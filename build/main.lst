ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB134:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  44:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** static void MX_SPI1_Init(void);
  54:Core/Src/main.c **** static void MX_SPI2_Init(void);
  55:Core/Src/main.c **** void boardstateToLed();
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** uint8_t boardstate[8];
  63:Core/Src/main.c **** uint8_t ledstate[8];
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /**
  68:Core/Src/main.c ****   * @brief  The application entry point.
  69:Core/Src/main.c ****   * @retval int
  70:Core/Src/main.c ****   */
  71:Core/Src/main.c **** int main(void)
  72:Core/Src/main.c **** {
  73:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE END 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  80:Core/Src/main.c ****   HAL_Init();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Configure the system clock */
  87:Core/Src/main.c ****   SystemClock_Config();
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE END SysInit */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Initialize all configured peripherals */
  94:Core/Src/main.c ****   MX_GPIO_Init();
  95:Core/Src/main.c ****   MX_SPI1_Init();
  96:Core/Src/main.c ****   MX_SPI2_Init();
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  98:Core/Src/main.c ****   //TODO: init SPI and what not
  99:Core/Src/main.c ****   for(int i = 0; i < 8; i++) {
 100:Core/Src/main.c ****     ledstate[i] = 0xA2;
 101:Core/Src/main.c ****   }
 102:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_SET);
 103:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, GPIO_PIN_RESET);
 104:Core/Src/main.c ****     // HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE END 2 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Infinite loop */
 109:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 110:Core/Src/main.c ****   while (1)
 111:Core/Src/main.c ****   {
 112:Core/Src/main.c ****     /* USER CODE END WHILE */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 115:Core/Src/main.c ****     // de-assert and re-assert load to load values into registers
 116:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_RESET);
 117:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_SET);
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****     HAL_SPI_Receive(&hspi1, (uint8_t *)boardstate, 8, 100000);
 120:Core/Src/main.c ****     volatile int x = 8;
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****     boardstateToLed(&boardstate, &ledstate);
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****     //send buffer to shift registers before sending their values to LEDs
 126:Core/Src/main.c ****      volatile int test = HAL_SPI_Transmit(&hspi1, (uint8_t *)ledstate, 8, 10000);
 127:Core/Src/main.c ****     while(!(SPI1->SR & 0b10)) {}
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, GPIO_PIN_SET);
 130:Core/Src/main.c ****     while(!(GPIOA->ODR & GPIO_PIN_10)) {}
 131:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, GPIO_PIN_RESET);
 132:Core/Src/main.c ****     while((GPIOA->ODR & GPIO_PIN_10)) {}
 133:Core/Src/main.c ****     
 134:Core/Src/main.c ****     volatile int y = 8;
 135:Core/Src/main.c ****   }
 136:Core/Src/main.c ****   /* USER CODE END 3 */
 137:Core/Src/main.c **** }
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** /**
 140:Core/Src/main.c ****   * @brief System Clock Configuration
 141:Core/Src/main.c ****   * @retval None
 142:Core/Src/main.c ****   */
 143:Core/Src/main.c **** void SystemClock_Config(void)
 144:Core/Src/main.c **** {
 145:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 4


 146:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 151:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 154:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 155:Core/Src/main.c ****   */
 156:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 165:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 166:Core/Src/main.c ****   {
 167:Core/Src/main.c ****     Error_Handler();
 168:Core/Src/main.c ****   }
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 171:Core/Src/main.c ****   */
 172:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 173:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 174:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV64;
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 180:Core/Src/main.c ****   {
 181:Core/Src/main.c ****     Error_Handler();
 182:Core/Src/main.c ****   }
 183:Core/Src/main.c **** }
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** /**
 186:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 187:Core/Src/main.c ****   * @param None
 188:Core/Src/main.c ****   * @retval None
 189:Core/Src/main.c ****   */
 190:Core/Src/main.c **** static void MX_SPI1_Init(void)
 191:Core/Src/main.c **** {
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 200:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 201:Core/Src/main.c ****   hspi1.Instance = SPI1;
 202:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 5


 203:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 204:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 205:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 206:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 207:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 208:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 209:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 210:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 211:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 212:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 213:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 214:Core/Src/main.c ****   {
 215:Core/Src/main.c ****     Error_Handler();
 216:Core/Src/main.c ****   }
 217:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** }
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** /**
 224:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 225:Core/Src/main.c ****   * @param None
 226:Core/Src/main.c ****   * @retval None
 227:Core/Src/main.c ****   */
 228:Core/Src/main.c **** static void MX_SPI2_Init(void)
 229:Core/Src/main.c **** {
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 238:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 239:Core/Src/main.c ****   hspi2.Instance = SPI2;
 240:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 241:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 242:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 243:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 244:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 245:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 246:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 247:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 248:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 249:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 250:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 251:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 252:Core/Src/main.c ****   {
 253:Core/Src/main.c ****     Error_Handler();
 254:Core/Src/main.c ****   }
 255:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** }
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** /**
 262:Core/Src/main.c ****   * @brief GPIO Initialization Function
 263:Core/Src/main.c ****   * @param None
 264:Core/Src/main.c ****   * @retval None
 265:Core/Src/main.c ****   */
 266:Core/Src/main.c **** static void MX_GPIO_Init(void)
 267:Core/Src/main.c **** {
  28              		.loc 1 267 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 89B0     		sub	sp, sp, #36
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 56
 268:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 268 3 view .LVU1
  44              		.loc 1 268 20 is_stmt 0 view .LVU2
  45 0004 0024     		movs	r4, #0
  46 0006 0394     		str	r4, [sp, #12]
  47 0008 0494     		str	r4, [sp, #16]
  48 000a 0594     		str	r4, [sp, #20]
  49 000c 0694     		str	r4, [sp, #24]
  50 000e 0794     		str	r4, [sp, #28]
 269:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 270:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 273:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  51              		.loc 1 273 3 is_stmt 1 view .LVU3
  52              	.LBB4:
  53              		.loc 1 273 3 view .LVU4
  54 0010 0194     		str	r4, [sp, #4]
  55              		.loc 1 273 3 view .LVU5
  56 0012 274B     		ldr	r3, .L3
  57 0014 1A6B     		ldr	r2, [r3, #48]
  58 0016 42F00102 		orr	r2, r2, #1
  59 001a 1A63     		str	r2, [r3, #48]
  60              		.loc 1 273 3 view .LVU6
  61 001c 1A6B     		ldr	r2, [r3, #48]
  62 001e 02F00102 		and	r2, r2, #1
  63 0022 0192     		str	r2, [sp, #4]
  64              		.loc 1 273 3 view .LVU7
  65 0024 019A     		ldr	r2, [sp, #4]
  66              	.LBE4:
  67              		.loc 1 273 3 view .LVU8
 274:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  68              		.loc 1 274 3 view .LVU9
  69              	.LBB5:
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 7


  70              		.loc 1 274 3 view .LVU10
  71 0026 0294     		str	r4, [sp, #8]
  72              		.loc 1 274 3 view .LVU11
  73 0028 1A6B     		ldr	r2, [r3, #48]
  74 002a 42F00202 		orr	r2, r2, #2
  75 002e 1A63     		str	r2, [r3, #48]
  76              		.loc 1 274 3 view .LVU12
  77 0030 1B6B     		ldr	r3, [r3, #48]
  78 0032 03F00203 		and	r3, r3, #2
  79 0036 0293     		str	r3, [sp, #8]
  80              		.loc 1 274 3 view .LVU13
  81 0038 029B     		ldr	r3, [sp, #8]
  82              	.LBE5:
  83              		.loc 1 274 3 view .LVU14
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 277:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4|GPIO_PIN_9|GPIO_PIN_10, GPIO_PIN_RESET);
  84              		.loc 1 277 3 view .LVU15
  85 003a 1E4D     		ldr	r5, .L3+4
  86 003c 2246     		mov	r2, r4
  87 003e 4FF4C261 		mov	r1, #1552
  88 0042 2846     		mov	r0, r5
  89 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
  90              	.LVL0:
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 280:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
  91              		.loc 1 280 3 view .LVU16
  92 0048 1B4E     		ldr	r6, .L3+8
  93 004a 2246     		mov	r2, r4
  94 004c 4FF48051 		mov	r1, #4096
  95 0050 3046     		mov	r0, r6
  96 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
  97              	.LVL1:
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /*Configure GPIO pins : PA1 PA2 PA3 */
 283:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
  98              		.loc 1 283 3 view .LVU17
  99              		.loc 1 283 23 is_stmt 0 view .LVU18
 100 0056 0E23     		movs	r3, #14
 101 0058 0393     		str	r3, [sp, #12]
 284:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 102              		.loc 1 284 3 is_stmt 1 view .LVU19
 103              		.loc 1 284 24 is_stmt 0 view .LVU20
 104 005a 0494     		str	r4, [sp, #16]
 285:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 105              		.loc 1 285 3 is_stmt 1 view .LVU21
 106              		.loc 1 285 24 is_stmt 0 view .LVU22
 107 005c 0594     		str	r4, [sp, #20]
 286:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 108              		.loc 1 286 3 is_stmt 1 view .LVU23
 109 005e 03A9     		add	r1, sp, #12
 110 0060 2846     		mov	r0, r5
 111 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 112              	.LVL2:
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /*Configure GPIO pins : PA4 PA9 PA10 */
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 8


 289:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_9|GPIO_PIN_10;
 113              		.loc 1 289 3 view .LVU24
 114              		.loc 1 289 23 is_stmt 0 view .LVU25
 115 0066 4FF4C263 		mov	r3, #1552
 116 006a 0393     		str	r3, [sp, #12]
 290:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 117              		.loc 1 290 3 is_stmt 1 view .LVU26
 118              		.loc 1 290 24 is_stmt 0 view .LVU27
 119 006c 0127     		movs	r7, #1
 120 006e 0497     		str	r7, [sp, #16]
 291:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 121              		.loc 1 291 3 is_stmt 1 view .LVU28
 122              		.loc 1 291 24 is_stmt 0 view .LVU29
 123 0070 0594     		str	r4, [sp, #20]
 292:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 124              		.loc 1 292 3 is_stmt 1 view .LVU30
 125              		.loc 1 292 25 is_stmt 0 view .LVU31
 126 0072 0694     		str	r4, [sp, #24]
 293:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 127              		.loc 1 293 3 is_stmt 1 view .LVU32
 128 0074 03A9     		add	r1, sp, #12
 129 0076 2846     		mov	r0, r5
 130 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL3:
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /*Configure GPIO pin : PB12 */
 296:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12;
 132              		.loc 1 296 3 view .LVU33
 133              		.loc 1 296 23 is_stmt 0 view .LVU34
 134 007c 4FF48053 		mov	r3, #4096
 135 0080 0393     		str	r3, [sp, #12]
 297:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 136              		.loc 1 297 3 is_stmt 1 view .LVU35
 137              		.loc 1 297 24 is_stmt 0 view .LVU36
 138 0082 0497     		str	r7, [sp, #16]
 298:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 139              		.loc 1 298 3 is_stmt 1 view .LVU37
 140              		.loc 1 298 24 is_stmt 0 view .LVU38
 141 0084 0594     		str	r4, [sp, #20]
 299:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 142              		.loc 1 299 3 is_stmt 1 view .LVU39
 143              		.loc 1 299 25 is_stmt 0 view .LVU40
 144 0086 0694     		str	r4, [sp, #24]
 300:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 145              		.loc 1 300 3 is_stmt 1 view .LVU41
 146 0088 03A9     		add	r1, sp, #12
 147 008a 3046     		mov	r0, r6
 148 008c FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL4:
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /*Configure GPIO pins : PA11 PA12 */
 303:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 150              		.loc 1 303 3 view .LVU42
 151              		.loc 1 303 23 is_stmt 0 view .LVU43
 152 0090 4FF4C053 		mov	r3, #6144
 153 0094 0393     		str	r3, [sp, #12]
 304:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 9


 154              		.loc 1 304 3 is_stmt 1 view .LVU44
 155              		.loc 1 304 24 is_stmt 0 view .LVU45
 156 0096 0223     		movs	r3, #2
 157 0098 0493     		str	r3, [sp, #16]
 305:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 158              		.loc 1 305 3 is_stmt 1 view .LVU46
 159              		.loc 1 305 24 is_stmt 0 view .LVU47
 160 009a 0594     		str	r4, [sp, #20]
 306:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 161              		.loc 1 306 3 is_stmt 1 view .LVU48
 162              		.loc 1 306 25 is_stmt 0 view .LVU49
 163 009c 0323     		movs	r3, #3
 164 009e 0693     		str	r3, [sp, #24]
 307:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 165              		.loc 1 307 3 is_stmt 1 view .LVU50
 166              		.loc 1 307 29 is_stmt 0 view .LVU51
 167 00a0 0A23     		movs	r3, #10
 168 00a2 0793     		str	r3, [sp, #28]
 308:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 169              		.loc 1 308 3 is_stmt 1 view .LVU52
 170 00a4 03A9     		add	r1, sp, #12
 171 00a6 2846     		mov	r0, r5
 172 00a8 FFF7FEFF 		bl	HAL_GPIO_Init
 173              	.LVL5:
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 311:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 312:Core/Src/main.c **** }
 174              		.loc 1 312 1 is_stmt 0 view .LVU53
 175 00ac 09B0     		add	sp, sp, #36
 176              	.LCFI2:
 177              		.cfi_def_cfa_offset 20
 178              		@ sp needed
 179 00ae F0BD     		pop	{r4, r5, r6, r7, pc}
 180              	.L4:
 181              		.align	2
 182              	.L3:
 183 00b0 00380240 		.word	1073887232
 184 00b4 00000240 		.word	1073872896
 185 00b8 00040240 		.word	1073873920
 186              		.cfi_endproc
 187              	.LFE134:
 189              		.section	.text.boardstateToLed,"ax",%progbits
 190              		.align	1
 191              		.global	boardstateToLed
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	boardstateToLed:
 197              	.LFB135:
 313:Core/Src/main.c **** 
 314:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 315:Core/Src/main.c **** void boardstateToLed() {
 198              		.loc 1 315 24 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 10


 316:Core/Src/main.c ****   for(int i = 0; i < 8; i++) {
 202              		.loc 1 316 3 view .LVU55
 203              	.LBB6:
 204              		.loc 1 316 7 view .LVU56
 205              	.LVL6:
 206              		.loc 1 316 11 is_stmt 0 view .LVU57
 207 0000 4FF0000C 		mov	ip, #0
 208              	.LVL7:
 209              		.loc 1 316 18 is_stmt 1 view .LVU58
 210              		.loc 1 316 3 is_stmt 0 view .LVU59
 211 0004 BCF1070F 		cmp	ip, #7
 212 0008 1DDC     		bgt	.L14
 213              	.LBE6:
 315:Core/Src/main.c ****   for(int i = 0; i < 8; i++) {
 214              		.loc 1 315 24 view .LVU60
 215 000a 00B5     		push	{lr}
 216              	.LCFI3:
 217              		.cfi_def_cfa_offset 4
 218              		.cfi_offset 14, -4
 219 000c 14E0     		b	.L10
 220              	.LVL8:
 221              	.L7:
 222              	.LBB11:
 223              	.LBB7:
 224              	.LBB8:
 317:Core/Src/main.c ****     int ledtemp = 0;
 318:Core/Src/main.c ****     int ledbit = 0x1;
 319:Core/Src/main.c ****     int boardbit = 0x80;
 320:Core/Src/main.c ****     for(int j = 0; j < 8; j++) {
 321:Core/Src/main.c ****       if(boardbit & boardstate[i]) {
 322:Core/Src/main.c ****         ledtemp |= ledbit;
 323:Core/Src/main.c ****       }
 324:Core/Src/main.c ****       boardbit = boardbit >> 1;
 225              		.loc 1 324 7 is_stmt 1 discriminator 2 view .LVU61
 226              		.loc 1 324 16 is_stmt 0 discriminator 2 view .LVU62
 227 000e 5210     		asrs	r2, r2, #1
 228              	.LVL9:
 325:Core/Src/main.c ****       ledbit = ledbit << 1;
 229              		.loc 1 325 7 is_stmt 1 discriminator 2 view .LVU63
 230              		.loc 1 325 14 is_stmt 0 discriminator 2 view .LVU64
 231 0010 4900     		lsls	r1, r1, #1
 232              	.LVL10:
 320:Core/Src/main.c ****       if(boardbit & boardstate[i]) {
 233              		.loc 1 320 27 is_stmt 1 discriminator 2 view .LVU65
 320:Core/Src/main.c ****       if(boardbit & boardstate[i]) {
 234              		.loc 1 320 28 is_stmt 0 discriminator 2 view .LVU66
 235 0012 0133     		adds	r3, r3, #1
 236              	.LVL11:
 237              	.L9:
 320:Core/Src/main.c ****       if(boardbit & boardstate[i]) {
 238              		.loc 1 320 20 is_stmt 1 discriminator 1 view .LVU67
 320:Core/Src/main.c ****       if(boardbit & boardstate[i]) {
 239              		.loc 1 320 5 is_stmt 0 discriminator 1 view .LVU68
 240 0014 072B     		cmp	r3, #7
 241 0016 07DC     		bgt	.L15
 321:Core/Src/main.c ****         ledtemp |= ledbit;
 242              		.loc 1 321 7 is_stmt 1 view .LVU69
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 11


 321:Core/Src/main.c ****         ledtemp |= ledbit;
 243              		.loc 1 321 31 is_stmt 0 view .LVU70
 244 0018 0B48     		ldr	r0, .L17
 245 001a 10F80C00 		ldrb	r0, [r0, ip]	@ zero_extendqisi2
 321:Core/Src/main.c ****         ledtemp |= ledbit;
 246              		.loc 1 321 9 view .LVU71
 247 001e 1042     		tst	r0, r2
 248 0020 F5D0     		beq	.L7
 322:Core/Src/main.c ****       }
 249              		.loc 1 322 9 is_stmt 1 view .LVU72
 322:Core/Src/main.c ****       }
 250              		.loc 1 322 17 is_stmt 0 view .LVU73
 251 0022 4EEA010E 		orr	lr, lr, r1
 252              	.LVL12:
 322:Core/Src/main.c ****       }
 253              		.loc 1 322 17 view .LVU74
 254 0026 F2E7     		b	.L7
 255              	.L15:
 322:Core/Src/main.c ****       }
 256              		.loc 1 322 17 view .LVU75
 257              	.LBE8:
 326:Core/Src/main.c ****     }
 327:Core/Src/main.c ****     ledstate[i] = ledtemp;
 258              		.loc 1 327 5 is_stmt 1 discriminator 2 view .LVU76
 259              		.loc 1 327 17 is_stmt 0 discriminator 2 view .LVU77
 260 0028 084B     		ldr	r3, .L17+4
 261              	.LVL13:
 262              		.loc 1 327 17 discriminator 2 view .LVU78
 263 002a 03F80CE0 		strb	lr, [r3, ip]
 264              	.LBE7:
 316:Core/Src/main.c ****     int ledtemp = 0;
 265              		.loc 1 316 25 is_stmt 1 discriminator 2 view .LVU79
 316:Core/Src/main.c ****     int ledtemp = 0;
 266              		.loc 1 316 26 is_stmt 0 discriminator 2 view .LVU80
 267 002e 0CF1010C 		add	ip, ip, #1
 268              	.LVL14:
 316:Core/Src/main.c ****     int ledtemp = 0;
 269              		.loc 1 316 18 is_stmt 1 discriminator 2 view .LVU81
 316:Core/Src/main.c ****     int ledtemp = 0;
 270              		.loc 1 316 3 is_stmt 0 discriminator 2 view .LVU82
 271 0032 BCF1070F 		cmp	ip, #7
 272 0036 04DC     		bgt	.L16
 273              	.LVL15:
 274              	.L10:
 275              	.LBB10:
 276              	.LBB9:
 320:Core/Src/main.c ****       if(boardbit & boardstate[i]) {
 277              		.loc 1 320 13 view .LVU83
 278 0038 0023     		movs	r3, #0
 279              	.LBE9:
 319:Core/Src/main.c ****     for(int j = 0; j < 8; j++) {
 280              		.loc 1 319 9 view .LVU84
 281 003a 8022     		movs	r2, #128
 318:Core/Src/main.c ****     int boardbit = 0x80;
 282              		.loc 1 318 9 view .LVU85
 283 003c 0121     		movs	r1, #1
 317:Core/Src/main.c ****     int ledbit = 0x1;
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 12


 284              		.loc 1 317 9 view .LVU86
 285 003e 9E46     		mov	lr, r3
 286 0040 E8E7     		b	.L9
 287              	.LVL16:
 288              	.L16:
 317:Core/Src/main.c ****     int ledbit = 0x1;
 289              		.loc 1 317 9 view .LVU87
 290              	.LBE10:
 291              	.LBE11:
 328:Core/Src/main.c ****   }
 329:Core/Src/main.c **** }
 292              		.loc 1 329 1 view .LVU88
 293 0042 5DF804FB 		ldr	pc, [sp], #4
 294              	.LVL17:
 295              	.L14:
 296              	.LCFI4:
 297              		.cfi_def_cfa_offset 0
 298              		.cfi_restore 14
 299              		.loc 1 329 1 view .LVU89
 300 0046 7047     		bx	lr
 301              	.L18:
 302              		.align	2
 303              	.L17:
 304 0048 00000000 		.word	.LANCHOR0
 305 004c 00000000 		.word	.LANCHOR1
 306              		.cfi_endproc
 307              	.LFE135:
 309              		.section	.text.Error_Handler,"ax",%progbits
 310              		.align	1
 311              		.global	Error_Handler
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 316              	Error_Handler:
 317              	.LFB136:
 330:Core/Src/main.c **** /* USER CODE END 4 */
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** /**
 333:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 334:Core/Src/main.c ****   * @retval None
 335:Core/Src/main.c ****   */
 336:Core/Src/main.c **** void Error_Handler(void)
 337:Core/Src/main.c **** {
 318              		.loc 1 337 1 is_stmt 1 view -0
 319              		.cfi_startproc
 320              		@ Volatile: function does not return.
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		@ link register save eliminated.
 338:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 339:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 340:Core/Src/main.c ****   __disable_irq();
 324              		.loc 1 340 3 view .LVU91
 325              	.LBB12:
 326              	.LBI12:
 327              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 13


   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 14


  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 15


 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 328              		.loc 2 140 27 view .LVU92
 329              	.LBB13:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 330              		.loc 2 142 3 view .LVU93
 331              		.syntax unified
 332              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 333 0000 72B6     		cpsid i
 334              	@ 0 "" 2
 335              		.thumb
 336              		.syntax unified
 337              	.L20:
 338              	.LBE13:
 339              	.LBE12:
 341:Core/Src/main.c ****   while (1)
 340              		.loc 1 341 3 discriminator 1 view .LVU94
 342:Core/Src/main.c ****   {
 343:Core/Src/main.c ****   }
 341              		.loc 1 343 3 discriminator 1 view .LVU95
 341:Core/Src/main.c ****   while (1)
 342              		.loc 1 341 9 discriminator 1 view .LVU96
 343 0002 FEE7     		b	.L20
 344              		.cfi_endproc
 345              	.LFE136:
 347              		.section	.text.MX_SPI1_Init,"ax",%progbits
 348              		.align	1
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 353              	MX_SPI1_Init:
 354              	.LFB132:
 191:Core/Src/main.c **** 
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 16


 355              		.loc 1 191 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359 0000 08B5     		push	{r3, lr}
 360              	.LCFI5:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 3, -8
 363              		.cfi_offset 14, -4
 201:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 364              		.loc 1 201 3 view .LVU98
 201:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 365              		.loc 1 201 18 is_stmt 0 view .LVU99
 366 0002 0D48     		ldr	r0, .L25
 367 0004 0D4B     		ldr	r3, .L25+4
 368 0006 0360     		str	r3, [r0]
 202:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 369              		.loc 1 202 3 is_stmt 1 view .LVU100
 202:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 370              		.loc 1 202 19 is_stmt 0 view .LVU101
 371 0008 4FF48273 		mov	r3, #260
 372 000c 4360     		str	r3, [r0, #4]
 203:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 373              		.loc 1 203 3 is_stmt 1 view .LVU102
 203:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 374              		.loc 1 203 24 is_stmt 0 view .LVU103
 375 000e 0023     		movs	r3, #0
 376 0010 8360     		str	r3, [r0, #8]
 204:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 377              		.loc 1 204 3 is_stmt 1 view .LVU104
 204:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 378              		.loc 1 204 23 is_stmt 0 view .LVU105
 379 0012 C360     		str	r3, [r0, #12]
 205:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 380              		.loc 1 205 3 is_stmt 1 view .LVU106
 205:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 381              		.loc 1 205 26 is_stmt 0 view .LVU107
 382 0014 0361     		str	r3, [r0, #16]
 206:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 383              		.loc 1 206 3 is_stmt 1 view .LVU108
 206:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 384              		.loc 1 206 23 is_stmt 0 view .LVU109
 385 0016 4361     		str	r3, [r0, #20]
 207:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 386              		.loc 1 207 3 is_stmt 1 view .LVU110
 207:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 387              		.loc 1 207 18 is_stmt 0 view .LVU111
 388 0018 4FF40072 		mov	r2, #512
 389 001c 8261     		str	r2, [r0, #24]
 208:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 390              		.loc 1 208 3 is_stmt 1 view .LVU112
 208:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 391              		.loc 1 208 32 is_stmt 0 view .LVU113
 392 001e C361     		str	r3, [r0, #28]
 209:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 393              		.loc 1 209 3 is_stmt 1 view .LVU114
 209:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 17


 394              		.loc 1 209 23 is_stmt 0 view .LVU115
 395 0020 0362     		str	r3, [r0, #32]
 210:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 396              		.loc 1 210 3 is_stmt 1 view .LVU116
 210:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 397              		.loc 1 210 21 is_stmt 0 view .LVU117
 398 0022 4362     		str	r3, [r0, #36]
 211:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 399              		.loc 1 211 3 is_stmt 1 view .LVU118
 211:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 400              		.loc 1 211 29 is_stmt 0 view .LVU119
 401 0024 8362     		str	r3, [r0, #40]
 212:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 402              		.loc 1 212 3 is_stmt 1 view .LVU120
 212:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 403              		.loc 1 212 28 is_stmt 0 view .LVU121
 404 0026 0A23     		movs	r3, #10
 405 0028 C362     		str	r3, [r0, #44]
 213:Core/Src/main.c ****   {
 406              		.loc 1 213 3 is_stmt 1 view .LVU122
 213:Core/Src/main.c ****   {
 407              		.loc 1 213 7 is_stmt 0 view .LVU123
 408 002a FFF7FEFF 		bl	HAL_SPI_Init
 409              	.LVL18:
 213:Core/Src/main.c ****   {
 410              		.loc 1 213 6 view .LVU124
 411 002e 00B9     		cbnz	r0, .L24
 221:Core/Src/main.c **** 
 412              		.loc 1 221 1 view .LVU125
 413 0030 08BD     		pop	{r3, pc}
 414              	.L24:
 215:Core/Src/main.c ****   }
 415              		.loc 1 215 5 is_stmt 1 view .LVU126
 416 0032 FFF7FEFF 		bl	Error_Handler
 417              	.LVL19:
 418              	.L26:
 419 0036 00BF     		.align	2
 420              	.L25:
 421 0038 00000000 		.word	.LANCHOR2
 422 003c 00300140 		.word	1073819648
 423              		.cfi_endproc
 424              	.LFE132:
 426              		.section	.text.MX_SPI2_Init,"ax",%progbits
 427              		.align	1
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 432              	MX_SPI2_Init:
 433              	.LFB133:
 229:Core/Src/main.c **** 
 434              		.loc 1 229 1 view -0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438 0000 08B5     		push	{r3, lr}
 439              	.LCFI6:
 440              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 18


 441              		.cfi_offset 3, -8
 442              		.cfi_offset 14, -4
 239:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 443              		.loc 1 239 3 view .LVU128
 239:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 444              		.loc 1 239 18 is_stmt 0 view .LVU129
 445 0002 0D48     		ldr	r0, .L31
 446 0004 0D4B     		ldr	r3, .L31+4
 447 0006 0360     		str	r3, [r0]
 240:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 448              		.loc 1 240 3 is_stmt 1 view .LVU130
 240:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 449              		.loc 1 240 19 is_stmt 0 view .LVU131
 450 0008 4FF48273 		mov	r3, #260
 451 000c 4360     		str	r3, [r0, #4]
 241:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 452              		.loc 1 241 3 is_stmt 1 view .LVU132
 241:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 453              		.loc 1 241 24 is_stmt 0 view .LVU133
 454 000e 0023     		movs	r3, #0
 455 0010 8360     		str	r3, [r0, #8]
 242:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 456              		.loc 1 242 3 is_stmt 1 view .LVU134
 242:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 457              		.loc 1 242 23 is_stmt 0 view .LVU135
 458 0012 C360     		str	r3, [r0, #12]
 243:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 459              		.loc 1 243 3 is_stmt 1 view .LVU136
 243:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 460              		.loc 1 243 26 is_stmt 0 view .LVU137
 461 0014 0361     		str	r3, [r0, #16]
 244:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 462              		.loc 1 244 3 is_stmt 1 view .LVU138
 244:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 463              		.loc 1 244 23 is_stmt 0 view .LVU139
 464 0016 4361     		str	r3, [r0, #20]
 245:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 465              		.loc 1 245 3 is_stmt 1 view .LVU140
 245:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 466              		.loc 1 245 18 is_stmt 0 view .LVU141
 467 0018 4FF40072 		mov	r2, #512
 468 001c 8261     		str	r2, [r0, #24]
 246:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 469              		.loc 1 246 3 is_stmt 1 view .LVU142
 246:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 470              		.loc 1 246 32 is_stmt 0 view .LVU143
 471 001e 0822     		movs	r2, #8
 472 0020 C261     		str	r2, [r0, #28]
 247:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 473              		.loc 1 247 3 is_stmt 1 view .LVU144
 247:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 474              		.loc 1 247 23 is_stmt 0 view .LVU145
 475 0022 0362     		str	r3, [r0, #32]
 248:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 476              		.loc 1 248 3 is_stmt 1 view .LVU146
 248:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 477              		.loc 1 248 21 is_stmt 0 view .LVU147
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 19


 478 0024 4362     		str	r3, [r0, #36]
 249:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 479              		.loc 1 249 3 is_stmt 1 view .LVU148
 249:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 480              		.loc 1 249 29 is_stmt 0 view .LVU149
 481 0026 8362     		str	r3, [r0, #40]
 250:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 482              		.loc 1 250 3 is_stmt 1 view .LVU150
 250:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 483              		.loc 1 250 28 is_stmt 0 view .LVU151
 484 0028 0A23     		movs	r3, #10
 485 002a C362     		str	r3, [r0, #44]
 251:Core/Src/main.c ****   {
 486              		.loc 1 251 3 is_stmt 1 view .LVU152
 251:Core/Src/main.c ****   {
 487              		.loc 1 251 7 is_stmt 0 view .LVU153
 488 002c FFF7FEFF 		bl	HAL_SPI_Init
 489              	.LVL20:
 251:Core/Src/main.c ****   {
 490              		.loc 1 251 6 view .LVU154
 491 0030 00B9     		cbnz	r0, .L30
 259:Core/Src/main.c **** 
 492              		.loc 1 259 1 view .LVU155
 493 0032 08BD     		pop	{r3, pc}
 494              	.L30:
 253:Core/Src/main.c ****   }
 495              		.loc 1 253 5 is_stmt 1 view .LVU156
 496 0034 FFF7FEFF 		bl	Error_Handler
 497              	.LVL21:
 498              	.L32:
 499              		.align	2
 500              	.L31:
 501 0038 00000000 		.word	.LANCHOR3
 502 003c 00380040 		.word	1073756160
 503              		.cfi_endproc
 504              	.LFE133:
 506              		.section	.text.SystemClock_Config,"ax",%progbits
 507              		.align	1
 508              		.global	SystemClock_Config
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 513              	SystemClock_Config:
 514              	.LFB131:
 144:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 515              		.loc 1 144 1 view -0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 80
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519 0000 00B5     		push	{lr}
 520              	.LCFI7:
 521              		.cfi_def_cfa_offset 4
 522              		.cfi_offset 14, -4
 523 0002 95B0     		sub	sp, sp, #84
 524              	.LCFI8:
 525              		.cfi_def_cfa_offset 88
 145:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 20


 526              		.loc 1 145 3 view .LVU158
 145:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 527              		.loc 1 145 22 is_stmt 0 view .LVU159
 528 0004 3022     		movs	r2, #48
 529 0006 0021     		movs	r1, #0
 530 0008 08A8     		add	r0, sp, #32
 531 000a FFF7FEFF 		bl	memset
 532              	.LVL22:
 146:Core/Src/main.c **** 
 533              		.loc 1 146 3 is_stmt 1 view .LVU160
 146:Core/Src/main.c **** 
 534              		.loc 1 146 22 is_stmt 0 view .LVU161
 535 000e 0023     		movs	r3, #0
 536 0010 0393     		str	r3, [sp, #12]
 537 0012 0493     		str	r3, [sp, #16]
 538 0014 0593     		str	r3, [sp, #20]
 539 0016 0693     		str	r3, [sp, #24]
 540 0018 0793     		str	r3, [sp, #28]
 150:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 541              		.loc 1 150 3 is_stmt 1 view .LVU162
 542              	.LBB14:
 150:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 543              		.loc 1 150 3 view .LVU163
 544 001a 0193     		str	r3, [sp, #4]
 150:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 545              		.loc 1 150 3 view .LVU164
 546 001c 1E4A     		ldr	r2, .L39
 547 001e 116C     		ldr	r1, [r2, #64]
 548 0020 41F08051 		orr	r1, r1, #268435456
 549 0024 1164     		str	r1, [r2, #64]
 150:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 550              		.loc 1 150 3 view .LVU165
 551 0026 126C     		ldr	r2, [r2, #64]
 552 0028 02F08052 		and	r2, r2, #268435456
 553 002c 0192     		str	r2, [sp, #4]
 150:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 554              		.loc 1 150 3 view .LVU166
 555 002e 019A     		ldr	r2, [sp, #4]
 556              	.LBE14:
 150:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 557              		.loc 1 150 3 view .LVU167
 151:Core/Src/main.c **** 
 558              		.loc 1 151 3 view .LVU168
 559              	.LBB15:
 151:Core/Src/main.c **** 
 560              		.loc 1 151 3 view .LVU169
 561 0030 0293     		str	r3, [sp, #8]
 151:Core/Src/main.c **** 
 562              		.loc 1 151 3 view .LVU170
 563 0032 1A4A     		ldr	r2, .L39+4
 564 0034 1168     		ldr	r1, [r2]
 565 0036 41F44041 		orr	r1, r1, #49152
 566 003a 1160     		str	r1, [r2]
 151:Core/Src/main.c **** 
 567              		.loc 1 151 3 view .LVU171
 568 003c 1268     		ldr	r2, [r2]
 569 003e 02F44042 		and	r2, r2, #49152
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 21


 570 0042 0292     		str	r2, [sp, #8]
 151:Core/Src/main.c **** 
 571              		.loc 1 151 3 view .LVU172
 572 0044 029A     		ldr	r2, [sp, #8]
 573              	.LBE15:
 151:Core/Src/main.c **** 
 574              		.loc 1 151 3 view .LVU173
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 575              		.loc 1 156 3 view .LVU174
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 576              		.loc 1 156 36 is_stmt 0 view .LVU175
 577 0046 0222     		movs	r2, #2
 578 0048 0892     		str	r2, [sp, #32]
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 579              		.loc 1 157 3 is_stmt 1 view .LVU176
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 580              		.loc 1 157 30 is_stmt 0 view .LVU177
 581 004a 0121     		movs	r1, #1
 582 004c 0B91     		str	r1, [sp, #44]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 583              		.loc 1 158 3 is_stmt 1 view .LVU178
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 584              		.loc 1 158 41 is_stmt 0 view .LVU179
 585 004e 1021     		movs	r1, #16
 586 0050 0C91     		str	r1, [sp, #48]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 587              		.loc 1 159 3 is_stmt 1 view .LVU180
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 588              		.loc 1 159 34 is_stmt 0 view .LVU181
 589 0052 0E92     		str	r2, [sp, #56]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 590              		.loc 1 160 3 is_stmt 1 view .LVU182
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 591              		.loc 1 160 35 is_stmt 0 view .LVU183
 592 0054 0F93     		str	r3, [sp, #60]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 593              		.loc 1 161 3 is_stmt 1 view .LVU184
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 594              		.loc 1 161 30 is_stmt 0 view .LVU185
 595 0056 0823     		movs	r3, #8
 596 0058 1093     		str	r3, [sp, #64]
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 597              		.loc 1 162 3 is_stmt 1 view .LVU186
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 598              		.loc 1 162 30 is_stmt 0 view .LVU187
 599 005a 4023     		movs	r3, #64
 600 005c 1193     		str	r3, [sp, #68]
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 601              		.loc 1 163 3 is_stmt 1 view .LVU188
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 602              		.loc 1 163 30 is_stmt 0 view .LVU189
 603 005e 1292     		str	r2, [sp, #72]
 164:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 604              		.loc 1 164 3 is_stmt 1 view .LVU190
 164:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 605              		.loc 1 164 30 is_stmt 0 view .LVU191
 606 0060 0423     		movs	r3, #4
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 22


 607 0062 1393     		str	r3, [sp, #76]
 165:Core/Src/main.c ****   {
 608              		.loc 1 165 3 is_stmt 1 view .LVU192
 165:Core/Src/main.c ****   {
 609              		.loc 1 165 7 is_stmt 0 view .LVU193
 610 0064 08A8     		add	r0, sp, #32
 611 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 612              	.LVL23:
 165:Core/Src/main.c ****   {
 613              		.loc 1 165 6 view .LVU194
 614 006a 88B9     		cbnz	r0, .L37
 172:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 615              		.loc 1 172 3 is_stmt 1 view .LVU195
 172:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 616              		.loc 1 172 31 is_stmt 0 view .LVU196
 617 006c 0F23     		movs	r3, #15
 618 006e 0393     		str	r3, [sp, #12]
 174:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV64;
 619              		.loc 1 174 3 is_stmt 1 view .LVU197
 174:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV64;
 620              		.loc 1 174 34 is_stmt 0 view .LVU198
 621 0070 0223     		movs	r3, #2
 622 0072 0493     		str	r3, [sp, #16]
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 623              		.loc 1 175 3 is_stmt 1 view .LVU199
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 624              		.loc 1 175 35 is_stmt 0 view .LVU200
 625 0074 C023     		movs	r3, #192
 626 0076 0593     		str	r3, [sp, #20]
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 627              		.loc 1 176 3 is_stmt 1 view .LVU201
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 628              		.loc 1 176 36 is_stmt 0 view .LVU202
 629 0078 4FF48053 		mov	r3, #4096
 630 007c 0693     		str	r3, [sp, #24]
 177:Core/Src/main.c **** 
 631              		.loc 1 177 3 is_stmt 1 view .LVU203
 177:Core/Src/main.c **** 
 632              		.loc 1 177 36 is_stmt 0 view .LVU204
 633 007e 0021     		movs	r1, #0
 634 0080 0791     		str	r1, [sp, #28]
 179:Core/Src/main.c ****   {
 635              		.loc 1 179 3 is_stmt 1 view .LVU205
 179:Core/Src/main.c ****   {
 636              		.loc 1 179 7 is_stmt 0 view .LVU206
 637 0082 03A8     		add	r0, sp, #12
 638 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 639              	.LVL24:
 179:Core/Src/main.c ****   {
 640              		.loc 1 179 6 view .LVU207
 641 0088 20B9     		cbnz	r0, .L38
 183:Core/Src/main.c **** 
 642              		.loc 1 183 1 view .LVU208
 643 008a 15B0     		add	sp, sp, #84
 644              	.LCFI9:
 645              		.cfi_remember_state
 646              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 23


 647              		@ sp needed
 648 008c 5DF804FB 		ldr	pc, [sp], #4
 649              	.L37:
 650              	.LCFI10:
 651              		.cfi_restore_state
 167:Core/Src/main.c ****   }
 652              		.loc 1 167 5 is_stmt 1 view .LVU209
 653 0090 FFF7FEFF 		bl	Error_Handler
 654              	.LVL25:
 655              	.L38:
 181:Core/Src/main.c ****   }
 656              		.loc 1 181 5 view .LVU210
 657 0094 FFF7FEFF 		bl	Error_Handler
 658              	.LVL26:
 659              	.L40:
 660              		.align	2
 661              	.L39:
 662 0098 00380240 		.word	1073887232
 663 009c 00700040 		.word	1073770496
 664              		.cfi_endproc
 665              	.LFE131:
 667              		.section	.text.main,"ax",%progbits
 668              		.align	1
 669              		.global	main
 670              		.syntax unified
 671              		.thumb
 672              		.thumb_func
 674              	main:
 675              	.LFB130:
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 676              		.loc 1 72 1 view -0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 16
 679              		@ frame_needed = 0, uses_anonymous_args = 0
 680 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 681              	.LCFI11:
 682              		.cfi_def_cfa_offset 20
 683              		.cfi_offset 4, -20
 684              		.cfi_offset 5, -16
 685              		.cfi_offset 6, -12
 686              		.cfi_offset 7, -8
 687              		.cfi_offset 14, -4
 688 0002 85B0     		sub	sp, sp, #20
 689              	.LCFI12:
 690              		.cfi_def_cfa_offset 40
  80:Core/Src/main.c **** 
 691              		.loc 1 80 3 view .LVU212
 692 0004 FFF7FEFF 		bl	HAL_Init
 693              	.LVL27:
  87:Core/Src/main.c **** 
 694              		.loc 1 87 3 view .LVU213
 695 0008 FFF7FEFF 		bl	SystemClock_Config
 696              	.LVL28:
  94:Core/Src/main.c ****   MX_SPI1_Init();
 697              		.loc 1 94 3 view .LVU214
 698 000c FFF7FEFF 		bl	MX_GPIO_Init
 699              	.LVL29:
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 24


  95:Core/Src/main.c ****   MX_SPI2_Init();
 700              		.loc 1 95 3 view .LVU215
 701 0010 FFF7FEFF 		bl	MX_SPI1_Init
 702              	.LVL30:
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 703              		.loc 1 96 3 view .LVU216
 704 0014 FFF7FEFF 		bl	MX_SPI2_Init
 705              	.LVL31:
  99:Core/Src/main.c ****     ledstate[i] = 0xA2;
 706              		.loc 1 99 3 view .LVU217
 707              	.LBB16:
  99:Core/Src/main.c ****     ledstate[i] = 0xA2;
 708              		.loc 1 99 7 view .LVU218
  99:Core/Src/main.c ****     ledstate[i] = 0xA2;
 709              		.loc 1 99 11 is_stmt 0 view .LVU219
 710 0018 0023     		movs	r3, #0
  99:Core/Src/main.c ****     ledstate[i] = 0xA2;
 711              		.loc 1 99 3 view .LVU220
 712 001a 03E0     		b	.L42
 713              	.LVL32:
 714              	.L43:
 100:Core/Src/main.c ****   }
 715              		.loc 1 100 5 is_stmt 1 discriminator 3 view .LVU221
 100:Core/Src/main.c ****   }
 716              		.loc 1 100 17 is_stmt 0 discriminator 3 view .LVU222
 717 001c 2A4A     		ldr	r2, .L49
 718 001e A221     		movs	r1, #162
 719 0020 D154     		strb	r1, [r2, r3]
  99:Core/Src/main.c ****     ledstate[i] = 0xA2;
 720              		.loc 1 99 25 is_stmt 1 discriminator 3 view .LVU223
  99:Core/Src/main.c ****     ledstate[i] = 0xA2;
 721              		.loc 1 99 26 is_stmt 0 discriminator 3 view .LVU224
 722 0022 0133     		adds	r3, r3, #1
 723              	.LVL33:
 724              	.L42:
  99:Core/Src/main.c ****     ledstate[i] = 0xA2;
 725              		.loc 1 99 18 is_stmt 1 discriminator 1 view .LVU225
  99:Core/Src/main.c ****     ledstate[i] = 0xA2;
 726              		.loc 1 99 3 is_stmt 0 discriminator 1 view .LVU226
 727 0024 072B     		cmp	r3, #7
 728 0026 F9DD     		ble	.L43
 729              	.LBE16:
 102:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, GPIO_PIN_RESET);
 730              		.loc 1 102 3 is_stmt 1 view .LVU227
 731 0028 284C     		ldr	r4, .L49+4
 732 002a 0122     		movs	r2, #1
 733 002c 4FF40071 		mov	r1, #512
 734 0030 2046     		mov	r0, r4
 735 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 736              	.LVL34:
 103:Core/Src/main.c ****     // HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
 737              		.loc 1 103 3 view .LVU228
 738 0036 0022     		movs	r2, #0
 739 0038 4FF48061 		mov	r1, #1024
 740 003c 2046     		mov	r0, r4
 741 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 742              	.LVL35:
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 25


 743              	.L47:
 110:Core/Src/main.c ****   {
 744              		.loc 1 110 3 view .LVU229
 745              	.LBB17:
 116:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_SET);
 746              		.loc 1 116 5 view .LVU230
 747 0042 224C     		ldr	r4, .L49+4
 748 0044 0022     		movs	r2, #0
 749 0046 4FF40071 		mov	r1, #512
 750 004a 2046     		mov	r0, r4
 751 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 752              	.LVL36:
 117:Core/Src/main.c **** 
 753              		.loc 1 117 5 view .LVU231
 754 0050 0122     		movs	r2, #1
 755 0052 4FF40071 		mov	r1, #512
 756 0056 2046     		mov	r0, r4
 757 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 758              	.LVL37:
 119:Core/Src/main.c ****     volatile int x = 8;
 759              		.loc 1 119 5 view .LVU232
 760 005c 1C4F     		ldr	r7, .L49+8
 761 005e 1D4C     		ldr	r4, .L49+12
 762 0060 1D4B     		ldr	r3, .L49+16
 763 0062 0822     		movs	r2, #8
 764 0064 3946     		mov	r1, r7
 765 0066 2046     		mov	r0, r4
 766 0068 FFF7FEFF 		bl	HAL_SPI_Receive
 767              	.LVL38:
 120:Core/Src/main.c **** 
 768              		.loc 1 120 5 view .LVU233
 120:Core/Src/main.c **** 
 769              		.loc 1 120 18 is_stmt 0 view .LVU234
 770 006c 0826     		movs	r6, #8
 771 006e 0196     		str	r6, [sp, #4]
 123:Core/Src/main.c **** 
 772              		.loc 1 123 5 is_stmt 1 view .LVU235
 773 0070 154D     		ldr	r5, .L49
 774 0072 2946     		mov	r1, r5
 775 0074 3846     		mov	r0, r7
 776 0076 FFF7FEFF 		bl	boardstateToLed
 777              	.LVL39:
 126:Core/Src/main.c ****     while(!(SPI1->SR & 0b10)) {}
 778              		.loc 1 126 6 view .LVU236
 126:Core/Src/main.c ****     while(!(SPI1->SR & 0b10)) {}
 779              		.loc 1 126 26 is_stmt 0 view .LVU237
 780 007a 42F21073 		movw	r3, #10000
 781 007e 3246     		mov	r2, r6
 782 0080 2946     		mov	r1, r5
 783 0082 2046     		mov	r0, r4
 784 0084 FFF7FEFF 		bl	HAL_SPI_Transmit
 785              	.LVL40:
 126:Core/Src/main.c ****     while(!(SPI1->SR & 0b10)) {}
 786              		.loc 1 126 19 view .LVU238
 787 0088 0290     		str	r0, [sp, #8]
 127:Core/Src/main.c **** 
 788              		.loc 1 127 5 is_stmt 1 view .LVU239
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 26


 789              	.L44:
 127:Core/Src/main.c **** 
 790              		.loc 1 127 32 discriminator 1 view .LVU240
 127:Core/Src/main.c **** 
 791              		.loc 1 127 10 discriminator 1 view .LVU241
 127:Core/Src/main.c **** 
 792              		.loc 1 127 17 is_stmt 0 discriminator 1 view .LVU242
 793 008a 144B     		ldr	r3, .L49+20
 794 008c 9B68     		ldr	r3, [r3, #8]
 127:Core/Src/main.c **** 
 795              		.loc 1 127 10 discriminator 1 view .LVU243
 796 008e 13F0020F 		tst	r3, #2
 797 0092 FAD0     		beq	.L44
 129:Core/Src/main.c ****     while(!(GPIOA->ODR & GPIO_PIN_10)) {}
 798              		.loc 1 129 5 is_stmt 1 view .LVU244
 799 0094 0122     		movs	r2, #1
 800 0096 4FF48061 		mov	r1, #1024
 801 009a 0C48     		ldr	r0, .L49+4
 802 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 803              	.LVL41:
 130:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, GPIO_PIN_RESET);
 804              		.loc 1 130 5 view .LVU245
 805              	.L45:
 130:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, GPIO_PIN_RESET);
 806              		.loc 1 130 41 discriminator 1 view .LVU246
 130:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, GPIO_PIN_RESET);
 807              		.loc 1 130 10 discriminator 1 view .LVU247
 130:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, GPIO_PIN_RESET);
 808              		.loc 1 130 18 is_stmt 0 discriminator 1 view .LVU248
 809 00a0 0A4B     		ldr	r3, .L49+4
 810 00a2 5B69     		ldr	r3, [r3, #20]
 130:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, GPIO_PIN_RESET);
 811              		.loc 1 130 10 discriminator 1 view .LVU249
 812 00a4 13F4806F 		tst	r3, #1024
 813 00a8 FAD0     		beq	.L45
 131:Core/Src/main.c ****     while((GPIOA->ODR & GPIO_PIN_10)) {}
 814              		.loc 1 131 5 is_stmt 1 view .LVU250
 815 00aa 0022     		movs	r2, #0
 816 00ac 4FF48061 		mov	r1, #1024
 817 00b0 0648     		ldr	r0, .L49+4
 818 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 819              	.LVL42:
 132:Core/Src/main.c ****     
 820              		.loc 1 132 5 view .LVU251
 821              	.L46:
 132:Core/Src/main.c ****     
 822              		.loc 1 132 40 discriminator 1 view .LVU252
 132:Core/Src/main.c ****     
 823              		.loc 1 132 10 discriminator 1 view .LVU253
 132:Core/Src/main.c ****     
 824              		.loc 1 132 17 is_stmt 0 discriminator 1 view .LVU254
 825 00b6 054B     		ldr	r3, .L49+4
 826 00b8 5B69     		ldr	r3, [r3, #20]
 132:Core/Src/main.c ****     
 827              		.loc 1 132 10 discriminator 1 view .LVU255
 828 00ba 13F4806F 		tst	r3, #1024
 829 00be FAD1     		bne	.L46
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 27


 134:Core/Src/main.c ****   }
 830              		.loc 1 134 5 is_stmt 1 view .LVU256
 134:Core/Src/main.c ****   }
 831              		.loc 1 134 18 is_stmt 0 view .LVU257
 832 00c0 0823     		movs	r3, #8
 833 00c2 0393     		str	r3, [sp, #12]
 834              	.LBE17:
 110:Core/Src/main.c ****   {
 835              		.loc 1 110 9 is_stmt 1 view .LVU258
 111:Core/Src/main.c ****     /* USER CODE END WHILE */
 836              		.loc 1 111 3 is_stmt 0 view .LVU259
 837 00c4 BDE7     		b	.L47
 838              	.L50:
 839 00c6 00BF     		.align	2
 840              	.L49:
 841 00c8 00000000 		.word	.LANCHOR1
 842 00cc 00000240 		.word	1073872896
 843 00d0 00000000 		.word	.LANCHOR0
 844 00d4 00000000 		.word	.LANCHOR2
 845 00d8 A0860100 		.word	100000
 846 00dc 00300140 		.word	1073819648
 847              		.cfi_endproc
 848              	.LFE130:
 850              		.global	ledstate
 851              		.global	boardstate
 852              		.global	hspi2
 853              		.global	hspi1
 854              		.section	.bss.boardstate,"aw",%nobits
 855              		.align	2
 856              		.set	.LANCHOR0,. + 0
 859              	boardstate:
 860 0000 00000000 		.space	8
 860      00000000 
 861              		.section	.bss.hspi1,"aw",%nobits
 862              		.align	2
 863              		.set	.LANCHOR2,. + 0
 866              	hspi1:
 867 0000 00000000 		.space	88
 867      00000000 
 867      00000000 
 867      00000000 
 867      00000000 
 868              		.section	.bss.hspi2,"aw",%nobits
 869              		.align	2
 870              		.set	.LANCHOR3,. + 0
 873              	hspi2:
 874 0000 00000000 		.space	88
 874      00000000 
 874      00000000 
 874      00000000 
 874      00000000 
 875              		.section	.bss.ledstate,"aw",%nobits
 876              		.align	2
 877              		.set	.LANCHOR1,. + 0
 880              	ledstate:
 881 0000 00000000 		.space	8
 881      00000000 
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 28


 882              		.text
 883              	.Letext0:
 884              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 885              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 886              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 887              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 888              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 889              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 890              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 891              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 892              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 893              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 894              		.file 13 "<built-in>"
ARM GAS  C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:20     .text.MX_GPIO_Init:00000000 $t
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:183    .text.MX_GPIO_Init:000000b0 $d
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:190    .text.boardstateToLed:00000000 $t
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:196    .text.boardstateToLed:00000000 boardstateToLed
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:304    .text.boardstateToLed:00000048 $d
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:310    .text.Error_Handler:00000000 $t
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:316    .text.Error_Handler:00000000 Error_Handler
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:348    .text.MX_SPI1_Init:00000000 $t
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:353    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:421    .text.MX_SPI1_Init:00000038 $d
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:427    .text.MX_SPI2_Init:00000000 $t
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:432    .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:501    .text.MX_SPI2_Init:00000038 $d
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:507    .text.SystemClock_Config:00000000 $t
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:513    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:662    .text.SystemClock_Config:00000098 $d
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:668    .text.main:00000000 $t
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:674    .text.main:00000000 main
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:841    .text.main:000000c8 $d
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:880    .bss.ledstate:00000000 ledstate
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:859    .bss.boardstate:00000000 boardstate
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:873    .bss.hspi2:00000000 hspi2
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:866    .bss.hspi1:00000000 hspi1
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:855    .bss.boardstate:00000000 $d
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:862    .bss.hspi1:00000000 $d
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:869    .bss.hspi2:00000000 $d
C:\Users\virtu\AppData\Local\Temp\cctN6PdS.s:876    .bss.ledstate:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_SPI_Receive
HAL_SPI_Transmit
